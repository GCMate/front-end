[{"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\index.js":"1","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\App.js":"3","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\About.js":"4","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\RINInput.js":"5","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\PhoneEnter.js":"6","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\firebase-config.js":"7","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\ClassList.js":"8"},{"size":552,"mtime":1665863820938,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1665859900094,"results":"11","hashOfConfig":"10"},{"size":647,"mtime":1666808116619,"results":"12","hashOfConfig":"10"},{"size":914,"mtime":1665943952958,"results":"13","hashOfConfig":"10"},{"size":3362,"mtime":1666808366996,"results":"14","hashOfConfig":"10"},{"size":4427,"mtime":1666036351972,"results":"15","hashOfConfig":"10"},{"size":488,"mtime":1666032597293,"results":"16","hashOfConfig":"10"},{"size":540,"mtime":1666808053653,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"13qaa97",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\index.js",[],[],[],"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\reportWebVitals.js",[],[],"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\App.js",[],[],"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\About.js",["45"],[],"import React, { useState } from 'react';\r\nimport gcmateLogo from '../img/GCMateIcon.png';\r\nimport speech1 from '../img/SpeechLeft.png'; \r\nimport speech2 from '../img/SpeechRight.png';\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"About\" style={{\r\n            position: 'absolute',\r\n            backgroundImage: 'url('+gcmateLogo+')',\r\n            backgroundSize: \"cover\",\r\n            height: \"721px\",\r\n            width: \"1535px\"}}>\r\n\r\n        <div className=\"Title\"> \r\n            <h2> <span className=\"TitleText\">About</span></h2>\r\n        </div>\r\n        <div className=\"SpeechBox1\"> <img src={speech1} width=\"600\" alt=\"box1\" /> </div>\r\n        <div className=\"SpeechBox2\"> <img src={speech2} width=\"570\" alt=\"box2\" /> </div>\r\n        \r\n    </div>\r\n    );\r\n};\r\n\r\n// <div className=\"SpeechBox2\"> <img src={speech2} width=\"570\" alt=\"box2\" /> </div>\r\nexport default About; ","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\RINInput.js",["46","47","48","49"],[],"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\PhoneEnter.js",["50","51"],[],"import React, { useState } from 'react';\nimport gcmateLogo from '../img/GCMateIcon.png';\nimport MouseIcon from '../img/CompMouse.png';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport PhoneInput from 'react-phone-input-2'\nimport { authentication } from '../firebase-config';\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport 'react-phone-input-2/lib/style.css'\nimport './PhoneEnter.css';\n\nconst PhoneEnter = () => {\n    const [phoneNum, setPhoneNum] = useState(null);\n    /* validRIN = 0 --> Phone number hasn't been inputted yet, Display original text \n     * validRIN = 1 --> Phone number invalid, Display \"Invalid phone number\" text\n     * validRIN = 2 --> Phone number is valid, Go to Phone Number Validation page \n     */\n    const [validPhoneNum, setValidPhoneNum] = useState(0); \n    // Code used for phone number verification \n    const [otp, setOTP] = useState('');\n    // Checks whether the user's mouse is hovering over an object or not \n    const [hover, setHover] = useState(false); \n    // Used to change text prompt if user inputs incorrect OTP \n    const [incorrectOTP, setIncorrectOTP] = useState(false); \n\n    function checkValidPhoneNum() {\n        if (phoneNum.length !== 11) { setValidPhoneNum(1); }\n        else { \n          let finalPhoneNum = \"+\" + phoneNum; \n          setValidPhoneNum(2); \n          window.recaptchaVerifier = new RecaptchaVerifier('otpRegister', {\n            'size': 'invisible',\n            'callback': (response) => {\n              // reCAPTCHA solved, allow signInWithPhoneNumber.\n            }\n          }, authentication); \n          signInWithPhoneNumber(authentication, finalPhoneNum,  window.recaptchaVerifier)\n          .then(confirmationResult => {\n            window.confirmationResult = confirmationResult;\n          }).catch((error) => {\n            // Error; SMS not sent\n            console.log(error); \n          });\n        }\n    }\n\n    const verifyOTP = (e) => {\n      let pin = e.target.value; \n      setOTP(pin); \n\n      if (pin.length === 6) { \n        // Check correctness of OTP\n        let confirmationResult = window.confirmationResult; \n        confirmationResult.confirm(pin).then((result) => {\n          // User signed in successfully.\n          const user = result.user;\n          console.log(\"Correct\");\n          // ...\n        }).catch((error) => {\n          // Prompt user to try again \n          setIncorrectOTP(true);\n        });\n      }\n    }\n\n    return (\n        <div className=\"PhoneEnter\" style={{\n          position: 'absolute',\n          backgroundImage: 'url('+gcmateLogo+')',\n          backgroundSize: \"cover\",\n          height: \"721px\",\n          width: \"1535px\" \n        }}>\n          \n          <div className=\"Title\"><h1> Almost \n            <span className=\"LastWord\"> there...</span> </h1></div> \n    \n          <div className=\"Prompt\"> \n              {!incorrectOTP && validPhoneNum === 0 && <h2 className=\"PromptText\">\n                Please enter your <span className=\"PN\">phone number </span></h2> }\n              {!incorrectOTP && validPhoneNum === 1 && <h2 className=\"PromptTextInvalid\">\n                Invalid phone number. Please try again. </h2>}\n              {!incorrectOTP && validPhoneNum === 2 && \n              <h2 className=\"PromptText\"> Please enter OTP</h2>}\n              {incorrectOTP && validPhoneNum === 2 && \n              <h2 className=\"PromptTextInvalid\">Invalid OTP. Please try again. </h2>}\n          </div>\n          \n          { validPhoneNum !== 2 && \n          <PhoneInput className=\"PhoneTextInput\"\n            onlyCountries={['us']}\n            country={'us'}\n            value={phoneNum}\n            onChange={setPhoneNum}/> }\n            \n          {validPhoneNum !== 2 && <button onClick={()=> {checkValidPhoneNum();} }> SUBMIT </button> }\n\n          {validPhoneNum === 2 && \n            <input type=\"number\" value={otp} onChange={verifyOTP}/> \n          }\n          \n          <div className=\"LearnIcon\" > \n            <Link to=\"/about\">\n            <img \n              onMouseEnter={() => setHover(true)}\n              onMouseLeave={() => setHover(false)}\n              src={MouseIcon} width=\"40\" alt=\"mouse\"/>\n              </Link>\n            { hover && \n              (<h1> LEARN MORE </h1>)}\n          </div>\n          \n          <div id=\"otpRegister\"> </div>\n        </div>\n        \n        \n      );    \n};\n\nexport default PhoneEnter;","C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\firebase-config.js",[],[],"C:\\Users\\BRIAN\\Documents\\GCMate\\front-end\\src\\pages\\ClassList.js",["52"],[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"58","line":4,"column":36,"nodeType":"55","messageId":"56","endLine":4,"endColumn":42},{"ruleId":"53","severity":1,"message":"59","line":14,"column":12,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":79,"column":38,"nodeType":"62","messageId":"63","endLine":79,"endColumn":40},{"ruleId":"53","severity":1,"message":"58","line":4,"column":26,"nodeType":"55","messageId":"56","endLine":4,"endColumn":32},{"ruleId":"53","severity":1,"message":"64","line":55,"column":17,"nodeType":"55","messageId":"56","endLine":55,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Router' is defined but never used.","'rinData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used."]